name: RustQuant

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_test_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # BUILD THE LIBRARY
      - name: Build RustQuant.
        run: cargo build --release --verbose
      # TEST THE LIBRARY
      - name: Run unit tests.
        run: cargo test --release --verbose
      # INSTALL TARPALUIN FOR CODE COVERAGE
      - name: Install Tarpaulin. 
        run: cargo install cargo-tarpaulin
      # GENERATE CODE COVERAGE REPORT
      - name: Generate code coverage report.
        run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml --exclude-files src/lib.rs src/trading/* Bindings/*
      # UPLOAD CODE COVERAGE REPORT TO CODECOV.IO
      - name: Upload coverage reports to Codecov.io
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Run tests
  #     run: cargo test --release --verbose
  # codecov:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install Tarpaulin
  #       run: cargo install cargo-tarpaulin
  #     - name: Generate code coverage report.
  #       run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml --exclude-files src/lib.rs src/trading/* Bindings/*
  #     - name: Upload coverage reports to Codecov.io
  #       uses: codecov/codecov-action@v3
  #       with:
  #         fail_ci_if_error: true